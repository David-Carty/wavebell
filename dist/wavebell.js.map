{"version":3,"file":"wavebell.js","sources":["../lib/util/assert.js","../lib/util/props.js","../lib/media/user_media.js","../lib/media/recorder.js","../lib/util/emitter.js","../lib/media/audio_filter.js","../lib/media/volume_meter.js","../lib/wavebell.js"],"sourcesContent":["/*\n * Copyright (C) 2017, Skyler.\n * Use of this source code is governed by the MIT license that can be\n * found in the LICENSE file.\n */\n\nclass Assertion {\n  constructor (value) {\n    this.value = value\n    this._negative = false\n    this._error = new Error('Assertion failed')\n  }\n\n  get to () {\n    return this\n  }\n\n  get not () {\n    this._negative = !this._negative\n    return this\n  }\n\n  that (error) {\n    this._error = error\n    return this\n  }\n\n  equal (value) {\n    if ((value === this.value) === this._negative) {\n      throw this._error\n    }\n  }\n}\n\nfunction assert (value) {\n  return new Assertion(value)\n}\n\nexport default assert\n","/*\n * Copyright (C) 2017, Skyler.\n * Use of this source code is governed by the MIT license that can be\n * found in the LICENSE file.\n */\n\nconst hasOwn = Object.prototype.hasOwnProperty\n\nclass PropPath {\n  constructor (path) {\n    this.steps = path.split('.')\n    this.fallback = undefined\n  }\n\n  travel (target, fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError(fn + ' is not a function')\n    }\n    let len = this.steps.length\n    let i = 0\n    let step = this.steps[i]\n    while (fn(target, step) && i < len) {\n      target = target[step]\n      step = this.steps[++i]\n    }\n    return {\n      step: i,\n      value: target\n    }\n  }\n\n  or (defaultValue) {\n    this.fallback = defaultValue\n    return this\n  }\n\n  from (obj) {\n    let ret = this.travel(obj, (target, step) => {\n      return target != null && step in Object(target)\n    })\n    if (ret.step === this.steps.length) {\n      return ret.value\n    } else {\n      return this.fallback\n    }\n  }\n\n  hadBy (obj) {\n    let ret = this.travel(obj, (target, step) => {\n      return target != null && step in Object(target)\n    })\n    return ret.step === this.steps.length\n  }\n\n  ownedBy (obj) {\n    let ret = this.travel(obj, (target, step) => {\n      return target != null && hasOwn.call(target, step)\n    })\n    return ret.step === this.steps.length\n  }\n}\n\nfunction props (path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(path + ' is not a string')\n  }\n  return new PropPath(path)\n}\n\nexport default props\n","/*\n * Copyright (C) 2017, Skyler.\n * Use of this source code is governed by the MIT license that can be\n * found in the LICENSE file.\n */\n\nimport props from '@/util/props'\n\n/**\n * Shim for MediaDevices#getUserMedia method\n * @param {object} constraints - The user media constraints\n */\nfunction getUserMedia (constraints) {\n  if (props('navigator.mediaDevices.getUserMedia').hadBy(window)) {\n    let medias = props('navigator.mediaDevices').from(window)\n    return medias.getUserMedia(constraints)\n  }\n  let userMediaGetter = navigator.getUserMedia ||\n                        navigator.webkitGetUserMedia ||\n                        navigator.mozGetUserMedia ||\n                        navigator.msGetUserMedia\n  if (!userMediaGetter) {\n    throw new Error('getUserMedia is not supported by this browser')\n  }\n  return new Promise((resolve, reject) => {\n    userMediaGetter(constraints, resolve, reject)\n  })\n}\n\n/**\n * Access audio input from microphone device\n */\nfunction getUserMicrophone () {\n  return getUserMedia({ audio: true, video: false })\n}\n\nexport {\n  getUserMedia,\n  getUserMicrophone\n}\n","/*\n * Copyright (C) 2017, Skyler.\n * Use of this source code is governed by the MIT license that can be\n * found in the LICENSE file.\n */\n\nimport Emitter from '@/util/emitter'\nimport assert from '@/util/assert'\nimport VolumeMeter from './volume_meter'\nimport { getUserMicrophone } from './user_media'\n\nfunction buildError (self, callee) {\n  return new Error(`Failed to execute '${callee}' on 'Recorder':\\n` +\n    `The Recorder's state is '${self.state}'.`)\n}\n\nclass Recorder extends Emitter {\n  constructor (options) {\n    super()\n    this.options = options || {\n      mimeType: 'audio/webm',\n      audioBitsPerSecond: 96000\n    }\n    this._intern = null\n    this._result = null\n    this._filter = new VolumeMeter(this)\n  }\n\n  get state () {\n    if (this._intern === null) {\n      return 'inactive'\n    } else {\n      return this._intern.state\n    }\n  }\n\n  get ready () {\n    return this._intern !== null\n  }\n\n  get result () {\n    return new Blob(this._result, {\n      type: this._intern.mimeType\n    })\n  }\n\n  open () {\n    return getUserMicrophone().then(stream => {\n      // create internal recorder\n      this._intern = new MediaRecorder(stream, this.options)\n      // register event listeners\n      let eventTypes = ['error', 'pause', 'resume', 'start', 'stop']\n      eventTypes.map(type => {\n        this._intern.addEventListener(type, e => this.emit(type, e))\n      })\n      this._intern.addEventListener('dataavailable', e => {\n        this._result.push(e.data)\n      })\n      // pipe stream to filter\n      this._filter.pipe(stream)\n    })\n  }\n\n  close () {\n    this._filter.cutoff()\n    this._intern = null\n    this._result = null\n  }\n\n  start (timeslice) {\n    assert(this.state).that(buildError(this, 'start')).to.equal('inactive')\n    // init result data on every start\n    this._result = []\n    // use lazy open policy\n    if (!this.ready) {\n      this.open().then(() => {\n        this._intern.start(timeslice)\n      })\n    } else {\n      this._intern.start(timeslice)\n    }\n  }\n\n  stop () {\n    assert(this.state).that(buildError(this, 'stop')).to.not.equal('inactive')\n    this._intern.stop()\n  }\n\n  pause () {\n    assert(this.state).that(buildError(this, 'pause')).to.equal('recording')\n    this._intern.pause()\n  }\n\n  resume () {\n    assert(this.state).that(buildError(this, 'resume')).to.equal('paused')\n    this._intern.resume()\n  }\n}\n\nexport default Recorder\n","/*\n * Copyright (C) 2017, Skyler.\n * Use of this source code is governed by the MIT license that can be\n * found in the LICENSE file.\n */\n\nfunction slice (args, from) {\n  return Array.prototype.slice.call(args, from)\n}\n\nclass Emitter {\n  constructor () {\n    this.handlerMap = {}\n  }\n\n  on (event, handler) {\n    if (typeof event !== 'string') {\n      throw new TypeError(event + ' is not a string')\n    }\n    if (typeof handler !== 'function') {\n      throw new TypeError(handler + ' is not a function')\n    }\n    let map = this.handlerMap\n    let handlers = map[event] = map[event] || []\n    let i = handlers.indexOf(handler)\n    if (i === -1) {\n      handlers.push(handler)\n    }\n    return this\n  }\n\n  off (event, handler) {\n    if (handler === undefined) {\n      // remove all handlers\n      delete this.handlerMap[event]\n      return this\n    }\n    // remove registered handler\n    let handlers = this.handlerMap[event]\n    if (handlers) {\n      let i = handlers.indexOf(handler)\n      if (i >= 0) {\n        handlers.splice(i, 1)\n      }\n      // cleanup empty handlers\n      if (handlers.length === 0) {\n        this.off(event)\n      }\n    }\n    return this\n  }\n\n  emit (event) {\n    let args = slice(arguments, 1)\n    let handlers = this.handlerMap[event]\n    if (handlers) {\n      for (let i = 0, len = handlers.length; i < len; i++) {\n        handlers[i].apply(undefined, args)\n      }\n    }\n    return this\n  }\n}\n\nexport default Emitter\n","/*\n * Copyright (C) 2017, Skyler.\n * Use of this source code is governed by the MIT license that can be\n * found in the LICENSE file.\n */\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext\n\n// AudioContext singleton shared by filters\nlet audioContext = null\n\nclass AudioFilter {\n  /**\n   * Get AudioContext instance\n   * @returns {AudioContext} - Shared instance\n   */\n  get context () {\n    if (!audioContext) {\n      audioContext = new AudioContext()\n    }\n    return audioContext\n  }\n}\n\nexport default AudioFilter\n","/*\n * Copyright (C) 2017, Skyler.\n * Use of this source code is governed by the MIT license that can be\n * found in the LICENSE file.\n */\n\nimport AudioFilter from './audio_filter'\n\nclass VolumeMeter extends AudioFilter {\n  constructor (mainbus, options) {\n    super()\n    this.mainbus = mainbus\n    this.options = options || {\n      fftSize: 2048,\n      smoothingTimeConstant: 0.3\n    }\n    this.source = null\n    this.analyser = this.init(this.options)\n  }\n\n  init (options) {\n    // init analyser from options\n    /// ref: https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode\n    let analyser = this.context.createAnalyser()\n    analyser.fftSize = options.fftSize\n    analyser.smoothingTimeConstant = options.smoothingTimeConstant\n\n    // use auto buffer size and only 1 I/O channel\n    /// ref: https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/createScriptProcessor\n    let processor = this.context.createScriptProcessor(0, 1, 1)\n    processor.onaudioprocess = e => {\n      if (this.mainbus.state === 'recording') {\n        this._processData(e)\n      }\n    }\n\n    // connect processing pipeline\n    /// ref: https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createMediaStreamSource\n    analyser.connect(processor)\n    processor.connect(this.context.destination)\n\n    return analyser\n  }\n\n  pipe (stream) {\n    // connect source stream\n    this.source = this.context.createMediaStreamSource(stream)\n    this.source.connect(this.analyser)\n  }\n\n  cutoff () {\n    this.source.disconnect(this.analyser)\n    this.source = null\n  }\n\n  _processData (e) {\n    // half of the fftSize\n    let data = new Uint8Array(this.analyser.frequencyBinCount)\n    this.analyser.getByteFrequencyData(data)\n    let value = this._calcAvgVolume(data)\n    this.mainbus.emit('wave', {\n      value: value\n    })\n  }\n\n  _calcAvgVolume (data) {\n    let sum = 0\n    let len = data.length\n    for (let i = 0; i < len; i++) {\n      sum += data[i]\n    }\n    return sum / len\n  }\n}\n\nexport default VolumeMeter\n","/*\n * Copyright (C) 2017, Skyler.\n * Use of this source code is governed by the MIT license that can be\n * found in the LICENSE file.\n */\n\nimport Recorder from '@/media/recorder'\n\nclass WaveBell extends Recorder {}\n\nexport default WaveBell\n"],"names":["assert","value","Assertion","props","path","TypeError","PropPath","getUserMicrophone","constraints","hadBy","window","from","getUserMedia","userMediaGetter","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Error","Promise","resolve","reject","audio","video","buildError","self","callee","state","Emitter","handlerMap","event","handler","map","this","handlers","indexOf","push","undefined","i","splice","length","off","args","Array","prototype","slice","call","arguments","len","apply","_negative","_error","error","AudioContext","webkitAudioContext","audioContext","AudioFilter","VolumeMeter","mainbus","options","source","analyser","_this","init","context","createAnalyser","fftSize","smoothingTimeConstant","processor","createScriptProcessor","onaudioprocess","_this2","_processData","e","connect","destination","stream","createMediaStreamSource","disconnect","data","Uint8Array","frequencyBinCount","getByteFrequencyData","_calcAvgVolume","emit","sum","hasOwn","Object","hasOwnProperty","steps","split","fallback","target","fn","step","defaultValue","obj","ret","travel","Recorder","_intern","_result","_filter","then","MediaRecorder","addEventListener","type","pipe","cutoff","timeslice","that","to","equal","ready","start","open","not","stop","pause","resume","Blob","mimeType"],"mappings":"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"}